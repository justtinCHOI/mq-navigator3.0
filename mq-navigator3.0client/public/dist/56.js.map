{"version":3,"file":"56.js","mappings":"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","sources":["webpack://mq-navigator3.0client/./src/hooks/useInput.ts","webpack://mq-navigator3.0client/./src/pages/LogIn/index.tsx","webpack://mq-navigator3.0client/./src/pages/SignUp/styles.tsx","webpack://mq-navigator3.0client/./src/utils/fetcher.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState } from 'react';\n\ntype Handler = (e: any) => void;\ntype ReturnTypes<T = any> = [T, Handler, Dispatch<SetStateAction<T>>];\nconst useInput = <T = any>(initialValue: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialValue);\n  const handler = useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    setValue(e.target.value as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import useInput from '@hooks/useInput';\nimport { Button, Error, Form, Header, Input, Label, LinkContainer } from '@pages/SignUp/styles';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst LogIn = () => {\n  const { data: userData, error, mutate } = useSWR('/api/users', fetcher);\n  const [logInError, setLogInError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      setLogInError(false);\n      axios\n        .post(\n          '/api/users/login',\n          { email, password },\n          {\n            withCredentials: true,\n          },\n        )\n        .then(() => {\n          mutate();\n        })\n        .catch((error) => {\n          console.dir(error);\n          setLogInError(error.response?.status === 401);\n        });\n    },\n    [email, password, mutate],\n  );\n\n  console.log(error, userData);\n  if (!error && userData) {\n    console.log('로그인됨', userData);\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\n        </Label>\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n      <LinkContainer>\n        아직 회원이 아니신가요?&nbsp;\n        <a href=\"/signup\">회원가입 하러가기</a>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default LogIn;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import axios from 'axios';\n\nconst fetcher = (url: string) => axios.get(url, { withCredentials: true }).then((response) => response.data);\n\nexport default fetcher;\n"],"names":["initialValue","_useState2","useState","value","setValue","useCallback","e","target","_useSWR","useSWR","fetcher","userData","data","error","mutate","_slicedToArray","logInError","setLogInError","_useInput2","useInput","email","onChangeEmail","_useInput4","password","onChangePassword","onSubmit","preventDefault","axios","post","withCredentials","then","catch","_error$response","console","dir","response","status","log","React","Redirect","to","id","Header","Form","Label","Input","type","name","onChange","Error","Button","LinkContainer","href","styled","header","_templateObject","_taggedTemplateLiteral","form","_templateObject2","label","_templateObject3","input","_templateObject4","button","_templateObject5","div","_templateObject6","Success","_templateObject7","p","_templateObject8","url","get"],"sourceRoot":""}