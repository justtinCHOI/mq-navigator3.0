{"version":3,"file":"257.js","mappings":"4JAIA,MAQA,EARqBA,IACnB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAASH,GAInC,MAAO,CAACC,GAHQG,EAAAA,EAAAA,cAAaC,IAC3BH,EAASG,EAAEC,OAAOL,MAAsB,GACvC,IACqBC,EAAS,C,+GCHnC,MA4DA,EA5DcK,KACZ,MAAM,YAAEC,EAAW,QAAEC,IAAYC,EAAAA,EAAAA,KAC3BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAOF,EAASG,OAAOD,MAAQ,CAAEE,SAAU,mCAC3C,uBAAEC,IAA2BR,EAAAA,EAAAA,MAE5BS,EAAYC,IAAiBjB,EAAAA,EAAAA,WAAS,IACtCkB,EAAOC,IAAiBC,EAAAA,EAAAA,GAAS,KACjCC,EAAUC,IAAoBF,EAAAA,EAAAA,GAAS,IACxCG,GAAWtB,EAAAA,EAAAA,cACdC,IACCA,EAAEsB,iBACFP,GAAc,GAEdX,EADmB,CAAEY,MAAOA,EAAOG,SAAUA,IAE1CI,MAAK,KACJV,GAAwB,IAEzBW,OAAOC,IACNC,QAAQC,IAAIF,GACZV,EAAyC,MAA3BU,EAAMG,UAAUC,OAAe,GAC7C,GAEN,CAACzB,EAASY,EAAOG,EAAUN,IAS7B,OANAiB,EAAAA,EAAAA,YAAU,KACJ3B,EAAYa,OACdV,EAASI,EAAKE,SAAU,CAAEmB,SAAS,GACrC,GACC,CAAC5B,EAAYa,MAAON,EAAKE,SAAUN,IAGpC0B,EAAAA,cAAA,OAAKC,GAAG,aACND,EAAAA,cAACE,EAAAA,GAAM,KAAC,gBACRF,EAAAA,cAACG,EAAAA,GAAI,CAACd,SAAUA,GACdW,EAAAA,cAACI,EAAAA,GAAK,CAACH,GAAG,eACRD,EAAAA,cAAA,YAAM,UACNA,EAAAA,cAAA,WACEA,EAAAA,cAACK,EAAAA,GAAK,CAACC,KAAK,QAAQL,GAAG,QAAQM,KAAK,QAAQ3C,MAAOoB,EAAOwB,SAAUvB,MAGxEe,EAAAA,cAACI,EAAAA,GAAK,CAACH,GAAG,kBACRD,EAAAA,cAAA,YAAM,QACNA,EAAAA,cAAA,WACEA,EAAAA,cAACK,EAAAA,GAAK,CAACC,KAAK,WAAWL,GAAG,WAAWM,KAAK,WAAW3C,MAAOuB,EAAUqB,SAAUpB,KAEjFN,GAAckB,EAAAA,cAACS,EAAAA,GAAK,KAAC,6BAExBT,EAAAA,cAACU,EAAAA,GAAM,CAACJ,KAAK,UAAS,QAExBN,EAAAA,cAACW,EAAAA,GAAa,KAAC,iBAEbX,EAAAA,cAACY,EAAAA,GAAI,CAACC,GAAG,kBAAiB,cAExB,C,gHC5DH,MAAMX,EAASY,EAAAA,EAAOC,MAAM;;;;;;;;;EAWtBZ,EAAOW,EAAAA,EAAOE,IAAI;;;;EAMlBZ,EAAQU,EAAAA,EAAOG,KAAK;;;;;;;;;;;;EAcpBZ,EAAQS,EAAAA,EAAOI,KAAK;;;;;;;;;;;;;;;;;;;;;EAuBpBR,EAASI,EAAAA,EAAOK,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BtBV,EAAQK,EAAAA,EAAOM,GAAG;;;;EAMlBC,EAAUP,EAAAA,EAAOM,GAAG;;;EAKpBT,EAAgBG,EAAAA,EAAOQ,CAAC","sources":["webpack://mq-navigator3.0client/./src/hooks/useInput.ts","webpack://mq-navigator3.0client/./src/pages/member/LogIn/index.tsx","webpack://mq-navigator3.0client/./src/pages/member/SignUp/styles.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState, ChangeEvent } from 'react';\n\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\n\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialData);\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value as unknown as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import useInput from '@hooks/useInput';\nimport { Button, Error, Form, Header, Input, Label, LinkContainer } from '@pages/member/SignUp/styles';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useCustomMember from '@hooks/useCustomMember';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n\nconst LogIn = () => {\n  const { memberState, doLogin } = useCustomMember();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || { pathname: '/workspace/mqnavigator/analyze' };\n  const { updateSlicesAfterLogin } = useCustomMember();\n\n  const [logInError, setLogInError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      setLogInError(false);\n      const loginParam = { email: email, password: password };\n      doLogin(loginParam)\n        .then(() => {\n          updateSlicesAfterLogin();\n        })\n        .catch((error) => {\n          console.dir(error);\n          setLogInError(error.response?.status === 401);\n        });\n    },\n    [doLogin, email, password, updateSlicesAfterLogin],\n  );\n\n  useEffect(() => {\n    if (memberState.email) {\n      navigate(from.pathname, { replace: true });\n    }\n  }, [memberState.email, from.pathname, navigate]);\n\n  return (\n    <div id=\"container\">\n      <Header>MQ-Navigator</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\n        </Label>\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n      <LinkContainer>\n        아직 회원이 아니신가요?&nbsp;\n        <Link to=\"/member/signup\">회원가입 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default LogIn;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background: rgba(20, 10, 110);\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    background-color: rgba(50, 20, 160);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n"],"names":["initialData","value","setValue","useState","useCallback","e","target","LogIn","memberState","doLogin","useCustomMember","navigate","useNavigate","location","useLocation","from","state","pathname","updateSlicesAfterLogin","logInError","setLogInError","email","onChangeEmail","useInput","password","onChangePassword","onSubmit","preventDefault","then","catch","error","console","dir","response","status","useEffect","replace","React","id","Header","Form","Label","Input","type","name","onChange","Error","Button","LinkContainer","Link","to","styled","header","form","label","input","button","div","Success","p"],"sourceRoot":""}