{"version":3,"file":"679.js","mappings":"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","sources":["webpack://mq-navigator3.0client/./src/components/Playbar/styles.tsx","webpack://mq-navigator3.0client/./src/components/Analyze/EachGate/EachGate.tsx","webpack://mq-navigator3.0client/./src/components/Analyze/GateList/index.tsx","webpack://mq-navigator3.0client/./src/components/Analyze/EachDisplay/EachDisplay.tsx","webpack://mq-navigator3.0client/./src/components/Analyze/DisplayList/index.tsx","webpack://mq-navigator3.0client/./src/pages/workspace/Analyze/index.tsx","webpack://mq-navigator3.0client/./src/pages/workspace/Analyze/styles.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PlaybarContainer = styled.div`\n  width: 100%;\n  height: 120px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const ContentRow = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const LeftContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 170px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RightContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\nexport const ContentLine = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-shrink: 0;\n`;\n\nexport const ContentLineText = styled.p`\n  margin: 10px;\n  height: 40px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  font-weight: 500;\n`;\n\nexport const ContentLineDiv = styled.div`\n  margin: 10px;\n  height: 40px;\n  border-radius: 4px;\n  padding: 5px;\n  font-size: 16px;\n  font-weight: 500;\n  box-sizing: border-box;\n\n  &:focus {\n    outline: none;\n    border-color: #666;\n    box-shadow: 0 0 5px #ccc;\n  }\n`;\n\nexport const ContentLineInput = styled.input`\n  margin: 10px;\n  height: 40px;\n  border-radius: 4px;\n  padding: 5px;\n  font-size: 16px;\n  font-weight: 500;\n  box-sizing: border-box;\n\n  &:focus {\n    outline: none;\n    border-color: #666;\n    box-shadow: 0 0 5px #ccc;\n  }\n`;\n\nexport const SelectOption = styled.select`\n  margin: 10px;\n  height: 40px;\n  border: none;\n  box-sizing: border-box;\n  border-radius: 4px;\n  padding: 5px;\n  font-size: 16px;\n  font-weight: 500;\n\n  &:focus {\n    outline: none;\n    box-shadow: none;\n  }\n`;\nexport const CustomIconButton = styled.button`\n  display: flex;\n  margin: 10px;\n  width: 40px;\n  height: 40px;\n  border-radius: 4px;\n  justify-content: space-around;\n  align-items: center;\n  font-size: 15px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n\n  &:hover {\n    background-color: #ccc;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nexport const CustomTextButton = styled.button`\n  margin: 10px;\n  padding: 5px 10px;\n  color: #000;\n  border: 1px solid #999;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n\n  &:hover {\n    background-color: #ccc;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 5px #ccc;\n  }\n`;\n\nexport const RightContentIcon = styled.i`\n  flex: 1;\n  margin: auto;\n  padding: 5px;\n  font-size: 24px;\n  cursor: pointer;\n  transition: color 0.3s ease, transform 0.3s ease;\n\n  &:active {\n    color: #000;\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  bottom: 30px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin: 20px;\n  height: 40px;\n`;\n\nexport const ProgressBar = styled.input`\n  width: 100%;\n  height: 10px;\n  appearance: none;\n  background-color: #ccc;\n  cursor: pointer;\n  margin-right: 20px;\n\n  &::-webkit-slider-thumb {\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    background-color: #333;\n    border-radius: 50%;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n\n  &:active::-webkit-slider-thumb {\n    background-color: #333;\n  }\n`;\n\nexport const TimeDisplay = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 120px;\n  padding: 20px;\n  font-size: 14px;\n  font-weight: 500;\n`;\n","import React from 'react';\nimport {\n  Content,\n  ContentLine,\n  ContentLineInput,\n  ContentLineText,\n  CustomIconButton,\n  SelectOption,\n} from '@components/Playbar/styles';\nimport '../../../index.css';\n\ninterface EachGateProps {\n  number?: number;\n}\n\nconst EachGate = ({ number }: EachGateProps) => {\n  return (\n    <Content>\n      <ContentLine>\n        <ContentLineText className=\"width70px\">{number}</ContentLineText>\n        <ContentLineInput className=\"width120px\" defaultValue=\"1111 1111\" />\n        <SelectOption className=\"width50px\">\n          <option value=\"north\" selected>\n            N\n          </option>\n          <option value=\"south\">S</option>\n        </SelectOption>\n        <ContentLineInput className=\"flex\" defaultValue=\"37.0\" />\n        <SelectOption className=\"width50px\">\n          <option value=\"east\" selected>\n            E\n          </option>\n          <option value=\"west\">W</option>\n        </SelectOption>\n        <ContentLineInput className=\"flex\" defaultValue=\"37.0\" />\n        <CustomIconButton>\n          <i className=\"fa-solid fa-xmark\"></i>\n        </CustomIconButton>\n      </ContentLine>\n    </Content>\n  );\n};\n\nexport default EachGate;\n","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { ScrollZone } from '@pages/workspace/Analyze/styles';\nimport EachGate from '@components/Analyze/EachGate/EachGate';\nimport {\n  Content,\n  ContentLine,\n  ContentLineText,\n  CustomIconButton,\n  CustomTextButton,\n  SelectOption,\n} from '@components/Playbar/styles';\nimport '../../../index.css';\n\nconst GateList = () => {\n  return (\n    <Content style={{ height: 'calc((100vh - 126px) / 2)' }}>\n      <Content style={{ height: '120px' }}>\n        <ContentLine style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n          <SelectOption style={{ margin: '0 auto' }}>\n            <option value=\"Route011\" selected>\n              Route011\n            </option>\n            <option value=\"Route012\" selected>\n              Route012\n            </option>\n            <option value=\"Route013\" selected>\n              Route013\n            </option>\n            <option value=\"Route014\" selected>\n              Route014\n            </option>\n          </SelectOption>\n          <div style={{ display: 'inline-flex', gap: '10px' }}>\n            <CustomTextButton>Save</CustomTextButton>\n            <CustomTextButton>Modify</CustomTextButton>\n          </div>\n        </ContentLine>\n        <ContentLine>\n          <ContentLineText className=\"width70px\">\n            Gate\n            <br />\n            Number\n          </ContentLineText>\n          <ContentLineText className=\"width120px\">\n            Time\n            <br />\n            MMDD hhmmss\n          </ContentLineText>\n          <ContentLineText className=\"flex\">Latitude</ContentLineText>\n          <ContentLineText className=\"flex\">Longitude</ContentLineText>\n          <CustomIconButton style={{ visibility: 'hidden' }}>X</CustomIconButton>\n          <div className=\"width6px\"></div>\n        </ContentLine>\n      </Content>\n      <ScrollZone style={{ height: 'calc((100vh - 126px) / 2) - 120px' }}>\n        <Scrollbars>\n          {Array.from({ length: 10 }, (_, index) => (\n            <EachGate key={index + 1} number={index + 1} />\n          ))}\n        </Scrollbars>\n      </ScrollZone>\n    </Content>\n  );\n};\n\nexport default GateList;\n","import React from 'react';\nimport { Content, ContentLine, ContentLineText } from '@components/Playbar/styles';\n\nconst EachDisplay = () => {\n  return (\n    <Content>\n      <ContentLine>\n        <ContentLineText className=\"width100px\">first ~ current</ContentLineText>\n        <ContentLineText className=\"flex\">2900</ContentLineText>\n        <ContentLineText className=\"flex\">252700</ContentLineText>\n        <ContentLineText className=\"flex\">252700</ContentLineText>\n        <ContentLineText className=\"flex\">1</ContentLineText>\n      </ContentLine>\n    </Content>\n  );\n};\n\nexport default EachDisplay;\n","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { ScrollZone } from '@pages/workspace/Analyze/styles';\nimport '../../../index.css';\nimport { Content, ContentLine, ContentLineText } from '@components/Playbar/styles';\nimport EachDisplay from '@components/Analyze/EachDisplay/EachDisplay';\nconst DisplayList = () => {\n  return (\n    <Content style={{ height: 'calc((100vh - 126px) / 2)' }}>\n      <Content style={{ height: '60px' }}>\n        <ContentLine>\n          <ContentLineText className=\"width100px\">Gate Range</ContentLineText>\n          <ContentLineText className=\"flex\">\n            Time\n            <br />\n            (m)\n          </ContentLineText>\n          <ContentLineText className=\"flex\">\n            Elasped Time\n            <br />\n            hhmmss\n          </ContentLineText>\n          <ContentLineText className=\"flex\">\n            Estimated Time\n            <br />\n            hhmmss\n          </ContentLineText>\n          <ContentLineText className=\"flex\">\n            Speed\n            <br />\n            km/h\n          </ContentLineText>\n        </ContentLine>\n      </Content>\n      <ScrollZone style={{ height: 'calc((100vh - 126px) / 2) - 60px' }}>\n        <Scrollbars>\n          {Array.from({ length: 10 }, (_, index) => (\n            <EachDisplay key={index + 1} />\n          ))}\n        </Scrollbars>\n      </ScrollZone>\n    </Content>\n  );\n};\n\nexport default DisplayList;\n","import React from 'react';\nimport GateList from '@components/Analyze/GateList';\nimport { Section } from '@pages/workspace/Analyze/styles';\nimport DisplayList from '@components/Analyze/DisplayList';\n\nconst Analyze = () => {\n  return (\n    <>\n      <Section>\n        <GateList />\n      </Section>\n      <Section>\n        <DisplayList />\n      </Section>\n    </>\n  );\n};\n\nexport default Analyze;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  margin: 0 10px 10px 10px;\n  border: 1px solid #eee;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ScrollZone = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n`;\n"],"names":["PlaybarContainer","styled","div","Content","ContentRow","LeftContent","RightContent","ContentLine","ContentLineText","p","ContentLineDiv","ContentLineInput","input","SelectOption","select","CustomIconButton","button","CustomTextButton","RightContentIcon","i","ProgressContainer","ProgressBar","TimeDisplay","EachGate","number","React","className","defaultValue","value","selected","GateList","style","height","justifyContent","alignItems","margin","display","gap","visibility","ScrollZone","Scrollbars","Array","from","length","_","index","key","EachDisplay","DisplayList","Analyze","Section","section"],"sourceRoot":""}