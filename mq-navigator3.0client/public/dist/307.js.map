{"version":3,"file":"307.js","mappings":"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","sources":["webpack://mq-navigator3.0client/./src/components/Modal/styles.tsx","webpack://mq-navigator3.0client/./src/components/Modal/index.tsx","webpack://mq-navigator3.0client/./src/components/Playbar/styles.tsx","webpack://mq-navigator3.0client/./src/hooks/useCustomPlaybar.ts","webpack://mq-navigator3.0client/./src/hooks/useCustomWorkspace.ts","webpack://mq-navigator3.0client/./src/hooks/useInput.ts","webpack://mq-navigator3.0client/./src/pages/member/SignUp/styles.tsx","webpack://mq-navigator3.0client/./src/components/InviteWorkspaceModal/index.tsx","webpack://mq-navigator3.0client/./src/pages/workspace/index.tsx","webpack://mq-navigator3.0client/./src/hooks/useCustomMove.ts","webpack://mq-navigator3.0client/./src/pages/workspace/styles.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CreateModal = styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px;\n    z-index: 1012;\n    position: relative;\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import { CreateModal, CloseModalButton } from '@components/Modal/styles';\nimport React, { FC, PropsWithChildren, useCallback } from 'react';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n}\n\nconst Modal: FC<PropsWithChildren<Props>> = ({ show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateModal onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\n        {children}\n      </div>\n    </CreateModal>\n  );\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const PlaybarContainer = styled.div`\n  width: 100%;\n  height: 120px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const ContentRow = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const LeftContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 170px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RightContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\nexport const ContentLine = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-shrink: 0;\n`;\n\nexport const ContentLineText = styled.p`\n  margin: 10px;\n  height: 40px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  font-weight: 500;\n`;\n\nexport const ContentLineDiv = styled.div`\n  margin: 10px;\n  height: 40px;\n  border-radius: 4px;\n  padding: 5px;\n  font-size: 16px;\n  font-weight: 500;\n  box-sizing: border-box;\n\n  &:focus {\n    outline: none;\n    border-color: #666;\n    box-shadow: 0 0 5px #ccc;\n  }\n`;\n\nexport const ContentLineInput = styled.input`\n  margin: 10px;\n  height: 40px;\n  border-radius: 4px;\n  padding: 5px;\n  font-size: 16px;\n  font-weight: 500;\n  box-sizing: border-box;\n\n  &:focus {\n    outline: none;\n    border-color: #666;\n    box-shadow: 0 0 5px #ccc;\n  }\n`;\n\nexport const SelectOption = styled.select`\n  margin: 10px;\n  height: 40px;\n  border: none;\n  box-sizing: border-box;\n  border-radius: 4px;\n  padding: 5px;\n  font-size: 16px;\n  font-weight: 500;\n\n  &:focus {\n    outline: none;\n    box-shadow: none;\n  }\n`;\nexport const CustomIconButton = styled.button`\n  display: flex;\n  margin: 10px;\n  width: 40px;\n  height: 40px;\n  border-radius: 4px;\n  justify-content: space-around;\n  align-items: center;\n  font-size: 15px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n\n  &:hover {\n    background-color: #ccc;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nexport const CustomTextButton = styled.button`\n  margin: 10px;\n  padding: 5px 10px;\n  color: #000;\n  border: 1px solid #999;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n\n  &:hover {\n    background-color: #ccc;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 5px #ccc;\n  }\n`;\n\nexport const RightContentIcon = styled.i`\n  flex: 1;\n  margin: 10px;\n  padding: 5px;\n  font-size: 24px;\n  cursor: pointer;\n  transition: color 0.3s ease, transform 0.3s ease;\n\n  &.dimmed {\n    color: #aaa; // 어두운 색상으로 변경\n    cursor: not-allowed; // 클릭 비활성화 느낌\n  }\n\n  &:active {\n    color: #000;\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  bottom: 30px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin: 20px;\n  height: 40px;\n`;\n\nexport const ProgressBar = styled.input`\n  width: calc(100%);\n  height: 10px;\n  appearance: none;\n  background-color: #ccc;\n  cursor: pointer;\n  //margin: 0 10px 0 10px;\n  margin: 0;\n  position: absolute;\n\n  &::-webkit-slider-thumb {\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    background-color: #333;\n    border-radius: 50%;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n\n  &:active::-webkit-slider-thumb {\n    background-color: #333;\n  }\n`;\n\n// Styled component for GateMarker\nexport const GateMarker = styled.div`\n  position: absolute;\n  border-radius: 4px;\n  top: 0;\n  width: 15px;\n  height: 20px;\n  background-color: white;\n  transform: translateX(-50%); // 정 중앙 위치\n  font-size: 14px;\n  color: black;\n  text-align: center;\n`;\n\nexport const DistanceDisplay = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 120px;\n  padding: 20px;\n  font-size: 14px;\n  font-weight: 500;\n`;\n","import { AppDispatch, RootState } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  toggleLive,\n  updateCurrentTime,\n  updateSelectedPoint,\n  updateSelectedTime,\n  updateFirstGate,\n  updateLastGate,\n  updatePreviousGateBasedOnSelected,\n  updateLatestGateBasedOnSelected,\n  updateNextGateBasedOnSelected,\n  updatePreviousGateBasedOnCurrent,\n  updateLatestGateBasedOnCurrent,\n  updateNextGateBasedOnCurrent,\n} from '@slices/playbarSlice';\nimport { IGate, NullableIGate } from '@typings/db';\nimport { useEffect } from 'react';\n\nconst useCustomPlaybar = () => {\n  const playbarState = useSelector((state: RootState) => state.playbarSlice); // Redux에서 플레이바 상태 가져오기\n  const isLive = useSelector((state: RootState) => state.playbarSlice.isLive); // Redux에서 isLive 가져오기\n  const dispatch: AppDispatch = useDispatch();\n\n  // currentTime 매초 변경\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch(updateCurrentTime());\n    }, 1000);\n\n    return () => clearInterval(interval); // 컴포넌트 언마운트 시 인터벌 정리\n  }, [dispatch]);\n\n  function updateSelectedTimeHook(selectedTime: string) {\n    dispatch(updateSelectedTime(selectedTime));\n  }\n\n  function updateSelectedPointHook(selectedPoint: NullableIGate | null) {\n    dispatch(updateSelectedPoint(selectedPoint));\n  }\n\n  function updateFirstGateHook(firstGate: IGate | null) {\n    dispatch(updateFirstGate(firstGate));\n  }\n\n  function updateLastGateHook(lastGate: IGate | null) {\n    dispatch(updateLastGate(lastGate));\n  }\n\n  function updatePreviousGateBasedOnSelectedHook(previousGate: IGate | null) {\n    dispatch(updatePreviousGateBasedOnSelected(previousGate));\n  }\n\n  function updateLatestGateBasedOnSelectedHook(latestGate: IGate | null) {\n    dispatch(updateLatestGateBasedOnSelected(latestGate));\n  }\n\n  function updateNextGateBasedOnSelectedHook(nextGate: IGate | null) {\n    dispatch(updateNextGateBasedOnSelected(nextGate));\n  }\n\n  function updatePreviousGateBasedOnCurrentHook(previousGate: IGate | null) {\n    dispatch(updatePreviousGateBasedOnCurrent(previousGate));\n  }\n\n  function updateLatestGateBasedOnCurrentHook(latestGate: IGate | null) {\n    dispatch(updateLatestGateBasedOnCurrent(latestGate));\n  }\n\n  function updateNextGateBasedOnCurrentHook(nextGate: IGate | null) {\n    dispatch(updateNextGateBasedOnCurrent(nextGate));\n  }\n\n  const handleLiveToggle = () => {\n    dispatch(toggleLive());\n  };\n\n  return {\n    playbarState,\n    isLive,\n    handleLiveToggle,\n    updateSelectedTimeHook,\n    updateSelectedPointHook,\n    updateFirstGateHook,\n    updateLastGateHook,\n    updatePreviousGateBasedOnSelectedHook,\n    updateLatestGateBasedOnSelectedHook,\n    updateNextGateBasedOnSelectedHook,\n    updatePreviousGateBasedOnCurrentHook,\n    updateLatestGateBasedOnCurrentHook,\n    updateNextGateBasedOnCurrentHook,\n  };\n};\n\nexport default useCustomPlaybar;\n","import {\n  postAddWorkspaceMemberAsync,\n  postCreateWorkspaceAsync,\n  updateWorkspaceAsync,\n  updateWorkspaceStateAsync,\n} from '@slices/workspaceSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { IWorkspace } from '@typings/db';\n\nconst useCustomWorkspace = () => {\n  // 이하 redux\n  const workspaces = useSelector((state: RootState) => state.workspaceSlice);\n  const dispatch: AppDispatch = useDispatch();\n  const { url } = useParams<{ url: string }>(); // URL에서 워크스페이스의 URL 추출\n  const memberState = useSelector((state: RootState) => state.memberSlice); // memberSlice에서 상태 가져오기\n  const workspaceState = useSelector((state: RootState) => state.workspaceSlice);\n\n  const postCreateWorkspace = (workspaceCreateParam: { name: string; url: string }) => {\n    dispatch(postCreateWorkspaceAsync(workspaceCreateParam));\n  };\n\n  const postAddWorkspaceMember = (workspaceUrl: string, memberAddParam: string) => {\n    dispatch(postAddWorkspaceMemberAsync({ workspaceUrl, memberAddParam }));\n  };\n\n  useEffect(() => {\n    // URL이 변경될 때마다 workspaceSlice를 업데이트\n    if (memberState?.workspaces) {\n      const selectedWorkspace = memberState.workspaces.find((workspace: IWorkspace) => workspace.url === url);\n      if (selectedWorkspace) {\n        dispatch(updateWorkspaceStateAsync(selectedWorkspace));\n      }\n    }\n  }, [url, memberState?.workspaces, dispatch]);\n\n  const updateWorkspaceHook = (newWorkspace: IWorkspace) => {\n    dispatch(updateWorkspaceAsync(newWorkspace));\n  };\n\n  return {\n    workspaceState,\n    workspaces,\n    postCreateWorkspace,\n    postAddWorkspaceMember,\n    updateWorkspaceHook,\n  };\n};\nexport default useCustomWorkspace;\n","import { Dispatch, SetStateAction, useCallback, useState, ChangeEvent } from 'react';\n\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\n\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialData);\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value as unknown as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background: rgba(20, 10, 110);\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    background-color: rgba(50, 20, 160);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/member/SignUp/styles';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport { postAddWorkspaceMember } from '@api/workspaceApi';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\n}\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\n  const { workspaceUrl } = useParams<{ workspaceUrl: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n\n  const onInviteMember = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim() || !workspaceUrl) {\n        return;\n      }\n      postAddWorkspaceMember(workspaceUrl, newMember)\n        .then(() => {\n          setShowInviteWorkspaceModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newMember, workspaceUrl, setShowInviteWorkspaceModal, setNewMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>이메일</span>\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteWorkspaceModal;\n","import React, { useCallback, useState } from 'react';\nimport Switch from 'react-switch';\nimport { Outlet } from 'react-router-dom';\nimport { Container, Header } from '@pages/workspace/styles';\nimport useCustomWorkspace from '@hooks/useCustomWorkspace';\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\nimport { CustomIconButton } from '@components/Playbar/styles';\nimport useCustomMove from '@hooks/useCustomMove';\nimport useCustomPlaybar from '@hooks/useCustomPlaybar';\n\nconst WorkspacePage = () => {\n  const { workspaceState } = useCustomWorkspace();\n  const { moveToAnalyze, moveToSetting } = useCustomMove();\n\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\n  const { isLive, handleLiveToggle } = useCustomPlaybar();\n\n  const onClickInviteWorkspace = useCallback(() => {\n    setShowInviteWorkspaceModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowInviteWorkspaceModal(false);\n  }, []);\n\n  const onClickMapIcon = useCallback(() => {\n    return moveToAnalyze();\n  }, [moveToAnalyze]);\n\n  const onClickSettingIcon = useCallback(() => {\n    return moveToSetting();\n  }, [moveToSetting]);\n\n  return (\n    <Container>\n      <Header>\n        <div style={{ display: 'flex', flex: 1, justifyContent: 'flex-start', alignItems: 'center', gap: '15px' }}>\n          <span>{workspaceState?.name}</span>\n          <Switch\n            onChange={handleLiveToggle}\n            checked={isLive}\n            offColor=\"#888\"\n            onColor=\"#ff4d4d\"\n            offHandleColor=\"#fff\"\n            onHandleColor=\"#fff\"\n            handleDiameter={21}\n            height={30}\n            width={70}\n            className=\"react-switch\"\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 10px rgba(255, 77, 77, 0.5)\"\n          />\n          <span>{isLive ? 'Live Data Mode' : 'Data Standby Mode'}</span>\n        </div>\n        <div style={{ display: 'flex', flex: 1, justifyContent: 'flex-end', alignItems: 'center' }}>\n          <span>{workspaceState?.members.length}</span>\n          <CustomIconButton onClick={onClickInviteWorkspace}>\n            <i className=\"fa-lg fa-solid fa-user-plus\"></i>\n          </CustomIconButton>\n          <CustomIconButton onClick={onClickMapIcon}>\n            <i className=\"fa-regular fa-map fa-lg\"></i>\n          </CustomIconButton>\n          <CustomIconButton onClick={onClickSettingIcon}>\n            <i className=\"fa-lg fa-solid fa-sliders\"></i>\n          </CustomIconButton>\n        </div>\n      </Header>\n      <Outlet />\n      <InviteWorkspaceModal\n        show={showInviteWorkspaceModal}\n        onCloseModal={onCloseModal}\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\n      />\n    </Container>\n  );\n};\n\nexport default WorkspacePage;\n","import { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router';\n\n// 페이지 이동과 관련된 커스텀 훅\nfunction UseCustomMove() {\n  const navigate = useNavigate();\n  const { url } = useParams<{ url: string }>();\n\n  // 분석 페이지로 이동\n  const moveToAnalyze = (): void => {\n    navigate({ pathname: `/workspace/${url}/analyze` });\n  };\n\n  // 분석 페이지로 이동\n  const moveToAnalyzeWithParam = (url: string): void => {\n    navigate({ pathname: `/workspace/${url}/analyze` });\n  };\n\n  // 설정 페이지로 이동\n  const moveToSetting = (): void => {\n    navigate({ pathname: `/workspace/${url}/setting` });\n  };\n\n  // 설정 페이지로 이동\n  const moveToSettingWithParam = (url: string): void => {\n    navigate({ pathname: `/workspace/${url}/setting` });\n  };\n\n  return { moveToAnalyze, moveToAnalyzeWithParam, moveToSetting, moveToSettingWithParam };\n}\n\nexport default UseCustomMove;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n`;\n\nexport const DragOver = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 0;\n  width: 100%;\n  height: calc(100% - 64px);\n  background: white;\n  opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n`;\n"],"names":["CreateModal","styled","div","_templateObject","_taggedTemplateLiteral","CloseModalButton","button","_templateObject2","_ref","show","children","onCloseModal","stopPropagation","useCallback","e","React","onClick","PlaybarContainer","Content","ContentRow","_templateObject3","LeftContent","_templateObject4","RightContent","_templateObject5","ContentLine","_templateObject6","ContentLineText","p","_templateObject7","ContentLineDiv","_templateObject8","ContentLineInput","input","_templateObject9","SelectOption","select","_templateObject10","CustomIconButton","_templateObject11","CustomTextButton","_templateObject12","RightContentIcon","i","_templateObject13","ProgressBar","_templateObject14","_templateObject15","GateMarker","_templateObject16","_templateObject17","playbarState","useSelector","state","playbarSlice","isLive","dispatch","useDispatch","useEffect","interval","setInterval","updateCurrentTime","clearInterval","handleLiveToggle","toggleLive","updateSelectedTimeHook","selectedTime","updateSelectedTime","updateSelectedPointHook","selectedPoint","updateSelectedPoint","updateFirstGateHook","firstGate","updateFirstGate","updateLastGateHook","lastGate","updateLastGate","updatePreviousGateBasedOnSelectedHook","previousGate","updatePreviousGateBasedOnSelected","updateLatestGateBasedOnSelectedHook","latestGate","updateLatestGateBasedOnSelected","updateNextGateBasedOnSelectedHook","nextGate","updateNextGateBasedOnSelected","updatePreviousGateBasedOnCurrentHook","updatePreviousGateBasedOnCurrent","updateLatestGateBasedOnCurrentHook","updateLatestGateBasedOnCurrent","updateNextGateBasedOnCurrentHook","updateNextGateBasedOnCurrent","workspaces","workspaceSlice","url","useParams","memberState","memberSlice","workspaceState","selectedWorkspace","find","workspace","updateWorkspaceStateAsync","postCreateWorkspace","workspaceCreateParam","postCreateWorkspaceAsync","postAddWorkspaceMember","workspaceUrl","memberAddParam","postAddWorkspaceMemberAsync","updateWorkspaceHook","newWorkspace","updateWorkspaceAsync","initialData","_useState2","useState","value","setValue","target","Header","header","Form","form","Label","label","Input","Button","Error","Success","LinkContainer","setShowInviteWorkspaceModal","_useInput2","useInput","newMember","onChangeNewMember","setNewMember","onInviteMember","preventDefault","trim","then","catch","error","_error$response","console","dir","toast","response","data","position","Modal","onSubmit","id","type","onChange","navigate","useCustomWorkspace","_useCustomMove","useNavigate","moveToAnalyze","pathname","concat","moveToAnalyzeWithParam","moveToSetting","moveToSettingWithParam","showInviteWorkspaceModal","_useCustomPlaybar","useCustomPlaybar","onClickInviteWorkspace","onClickMapIcon","onClickSettingIcon","Container","style","display","flex","justifyContent","alignItems","gap","name","Switch","checked","offColor","onColor","offHandleColor","onHandleColor","handleDiameter","height","width","className","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","members","length","Outlet","InviteWorkspaceModal"],"sourceRoot":""}