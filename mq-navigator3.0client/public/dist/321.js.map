{"version":3,"file":"321.js","mappings":"kQAYA,QARiB,SAAUA,GACzB,I,IAAgDC,G,GAAtBC,EAAAA,EAAAA,UAASF,G,EAAa,E,o4BAAzCG,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAItB,MAAO,CAACE,GAHQE,EAAAA,EAAAA,cAAY,SAACC,GAC3BF,EAASE,EAAEC,OAAOJ,MACpB,GAAG,IACqBC,EAC1B,C,ynCCmGA,QArGe,WACb,IAAcI,GAAaC,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,GAAxCC,KAC6CV,EAAAW,GAAfV,EAAAA,EAAAA,WAAS,GAAM,GAA9CW,EAAWZ,EAAA,GAAEa,EAAcb,EAAA,GACuBc,EAAAH,GAAfV,EAAAA,EAAAA,WAAS,GAAM,GAAlDc,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACmBG,EAAAN,GAAfV,EAAAA,EAAAA,WAAS,GAAM,GAAlDiB,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACKG,EAAAT,GAAZU,EAAAA,EAAAA,GAAS,IAAG,GAApCC,EAAKF,EAAA,GAAEG,EAAaH,EAAA,GACsBI,EAAAb,GAAZU,EAAAA,EAAAA,GAAS,IAAG,GAA1CI,EAAQD,EAAA,GAAEE,EAAgBF,EAAA,GACaG,EAAAhB,GAAZU,EAAAA,EAAAA,GAAS,IAAG,GAAvCO,EAAQD,EAAA,GAAIE,EAAWF,EAAA,GAC0BG,EAAAnB,GAAZU,EAAAA,EAAAA,GAAS,IAAG,GAAjDU,EAAaD,EAAA,GAAIE,EAAgBF,EAAA,GAElCG,GAAmB7B,EAAAA,EAAAA,cACvB,SAACC,GACCwB,EAAYxB,EAAEC,OAAOJ,OACrBiB,EAAiBY,IAAkB1B,EAAEC,OAAOJ,MAC9C,GACA,CAAC6B,EAAeF,IAGZK,GAAwB9B,EAAAA,EAAAA,cAC5B,SAACC,GACC2B,EAAiB3B,EAAEC,OAAOJ,OAC1BiB,EAAiBS,IAAavB,EAAEC,OAAOJ,MACzC,GACA,CAAC0B,EAAUI,IAGPG,GAAW/B,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAE+B,iBACGX,GAAaA,EAASY,SAGtBnB,IACHL,GAAe,GACfG,GAAiB,GACjBsB,EAAAA,EACGC,KAAK,aAAc,CAAEjB,MAAAA,EAAOG,SAAAA,EAAUG,SAAAA,IACtCY,MAAK,WACJxB,GAAiB,EACnB,IACCyB,OAAM,SAACC,GAAU,IAAAC,EAAAC,EAChBC,QAAQC,IAAkB,QAAfH,EAACD,EAAMK,gBAAQ,IAAAJ,OAAA,EAAdA,EAAgBjC,MAC5BG,EAA8C,OAAjB,QAAd+B,EAAAF,EAAMK,gBAAQ,IAAAH,GAAM,QAANA,EAAdA,EAAgBlC,YAAI,IAAAkC,OAAA,EAApBA,EAAsBI,MACvC,KAEN,GACA,CAAC1B,EAAOG,EAAUG,EAAUV,IAG9B,OAAIX,EACK0C,EAAAA,cAACC,EAAAA,GAAQ,CAACC,GAAG,sBAIpBF,EAAAA,cAAA,OAAKG,GAAG,aACNH,EAAAA,cAACI,EAAAA,GAAM,KAAC,UACRJ,EAAAA,cAACK,EAAAA,GAAI,CAACnB,SAAUA,GACdc,EAAAA,cAACM,EAAAA,GAAK,CAACH,GAAG,eACRH,EAAAA,cAAA,YAAM,UACNA,EAAAA,cAAA,WACEA,EAAAA,cAACO,EAAAA,GAAK,CAACC,KAAK,QAAQL,GAAG,QAAQM,KAAK,QAAQxD,MAAOoB,EAAOqC,SAAUpC,MAGxE0B,EAAAA,cAACM,EAAAA,GAAK,CAACH,GAAG,kBACRH,EAAAA,cAAA,YAAM,OACNA,EAAAA,cAAA,WACEA,EAAAA,cAACO,EAAAA,GAAK,CAACC,KAAK,OAAOL,GAAG,WAAWM,KAAK,WAAWxD,MAAOuB,EAAUkC,SAAUjC,MAGhFuB,EAAAA,cAACM,EAAAA,GAAK,CAACH,GAAG,kBACRH,EAAAA,cAAA,YAAM,QACNA,EAAAA,cAAA,WACEA,EAAAA,cAACO,EAAAA,GAAK,CAACC,KAAK,WAAWL,GAAG,WAAWM,KAAK,WAAWxD,MAAO0B,EAAU+B,SAAU1B,MAGpFgB,EAAAA,cAACM,EAAAA,GAAK,CAACH,GAAG,wBACRH,EAAAA,cAAA,YAAM,WACNA,EAAAA,cAAA,WACEA,EAAAA,cAACO,EAAAA,GAAK,CACJC,KAAK,WACLL,GAAG,iBACHM,KAAK,iBACLxD,MAAO6B,EACP4B,SAAUzB,KAGbhB,GAAiB+B,EAAAA,cAACW,EAAAA,GAAK,KAAC,qBACvBnC,GAAYwB,EAAAA,cAACW,EAAAA,GAAK,KAAC,gBACpBhD,GAAeqC,EAAAA,cAACW,EAAAA,GAAK,KAAC,kBACtB7C,GAAiBkC,EAAAA,cAACY,EAAAA,GAAO,KAAC,wBAE7BZ,EAAAA,cAACa,EAAAA,GAAM,CAACL,KAAK,UAAS,SAExBR,EAAAA,cAACc,EAAAA,GAAa,KAAC,cAEbd,EAAAA,cAAA,KAAGe,KAAK,UAAS,aAIzB,C,kPCzGO,IAAMX,EAASY,EAAAA,EAAOC,OAAMC,IAAAA,EAAAC,EAAA,yQAWtBd,EAAOW,EAAAA,EAAOI,KAAIC,IAAAA,EAAAF,EAAA,mEAMlBb,EAAQU,EAAAA,EAAOM,MAAKC,IAAAA,EAAAJ,EAAA,8NAcpBZ,EAAQS,EAAAA,EAAOQ,MAAKC,IAAAA,EAAAN,EAAA,4qBAuBpBN,EAASG,EAAAA,EAAOU,OAAMC,IAAAA,EAAAR,EAAA,wnBA6BtBR,EAAQK,EAAAA,EAAOY,IAAGC,IAAAA,EAAAV,EAAA,0EAMlBP,EAAUI,EAAAA,EAAOY,IAAGE,IAAAA,EAAAX,EAAA,mDAKpBL,EAAgBE,EAAAA,EAAOe,EAACC,IAAAA,EAAAb,EAAA,gQ,gDC5FrC,QAFgB,SAACc,GAAW,OAAK5C,EAAAA,EAAM6C,IAAID,EAAK,CAAEE,iBAAiB,IAAQ5C,MAAK,SAACO,GAAQ,OAAKA,EAASrC,IAAI,GAAC,C","sources":["webpack://mq-navigator3.0client/./src/hooks/useInput.ts","webpack://mq-navigator3.0client/./src/pages/SignUp/index.tsx","webpack://mq-navigator3.0client/./src/pages/SignUp/styles.tsx","webpack://mq-navigator3.0client/./src/utils/fetcher.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState } from 'react';\n\ntype Handler = (e: any) => void;\ntype ReturnTypes<T = any> = [T, Handler, Dispatch<SetStateAction<T>>];\nconst useInput = <T = any>(initialValue: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialValue);\n  const handler = useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    setValue(e.target.value as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import useInput from '@hooks/useInput';\nimport { Button, Error, Form, Header, Input, Label, LinkContainer, Success } from '@pages/SignUp/styles';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst SignUp = () => {\n  const { data: userData } = useSWR('/api/users', fetcher);\n  const [signUpError, setSignUpError] = useState(false);\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\n  const [mismatchError, setMismatchError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, , setPassword] = useInput('');\n  const [passwordCheck, , setPasswordCheck] = useInput('');\n\n  const onChangePassword = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword(e.target.value);\n      setMismatchError(passwordCheck !== e.target.value);\n    },\n    [passwordCheck, setPassword],\n  );\n\n  const onChangePasswordCheck = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setPasswordCheck(e.target.value);\n      setMismatchError(password !== e.target.value);\n    },\n    [password, setPasswordCheck],\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (!nickname || !nickname.trim()) {\n        return;\n      }\n      if (!mismatchError) {\n        setSignUpError(false);\n        setSignUpSuccess(false);\n        axios\n          .post('/api/users', { email, nickname, password })\n          .then(() => {\n            setSignUpSuccess(true);\n          })\n          .catch((error) => {\n            console.log(error.response?.data);\n            setSignUpError(error.response?.data?.code === 403);\n          });\n      }\n    },\n    [email, nickname, password, mismatchError],\n  );\n\n  if (userData) {\n    return <Redirect to=\"/workspace/sleact\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"nickname-label\">\n          <span>닉네임</span>\n          <div>\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n        </Label>\n        <Label id=\"password-check-label\">\n          <span>비밀번호 확인</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password-check\"\n              name=\"password-check\"\n              value={passwordCheck}\n              onChange={onChangePasswordCheck}\n            />\n          </div>\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\n          {signUpError && <Error>이미 가입된 이메일입니다.</Error>}\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\n        </Label>\n        <Button type=\"submit\">회원가입</Button>\n      </Form>\n      <LinkContainer>\n        이미 회원이신가요?&nbsp;\n        <a href=\"/login\">로그인 하러가기</a>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import axios from 'axios';\n\nconst fetcher = (url: string) => axios.get(url, { withCredentials: true }).then((response) => response.data);\n\nexport default fetcher;\n"],"names":["initialValue","_useState2","useState","value","setValue","useCallback","e","target","userData","useSWR","fetcher","data","_slicedToArray","signUpError","setSignUpError","_useState4","signUpSuccess","setSignUpSuccess","_useState6","mismatchError","setMismatchError","_useInput2","useInput","email","onChangeEmail","_useInput4","nickname","onChangeNickname","_useInput6","password","setPassword","_useInput8","passwordCheck","setPasswordCheck","onChangePassword","onChangePasswordCheck","onSubmit","preventDefault","trim","axios","post","then","catch","error","_error$response","_error$response2","console","log","response","code","React","Redirect","to","id","Header","Form","Label","Input","type","name","onChange","Error","Success","Button","LinkContainer","href","styled","header","_templateObject","_taggedTemplateLiteral","form","_templateObject2","label","_templateObject3","input","_templateObject4","button","_templateObject5","div","_templateObject6","_templateObject7","p","_templateObject8","url","get","withCredentials"],"sourceRoot":""}