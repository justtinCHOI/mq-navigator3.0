{"version":3,"file":"147.js","mappings":"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","sources":["webpack://mq-navigator3.0client/./src/hooks/useInput.ts","webpack://mq-navigator3.0client/./src/components/DMList/styles.tsx","webpack://mq-navigator3.0client/./src/components/EachChannel/index.tsx","webpack://mq-navigator3.0client/./src/components/ChannelList/index.tsx","webpack://mq-navigator3.0client/./src/components/Modal/styles.tsx","webpack://mq-navigator3.0client/./src/components/Modal/index.tsx","webpack://mq-navigator3.0client/./src/components/CreateChannelModal/index.tsx","webpack://mq-navigator3.0client/./src/components/EachDM/index.tsx","webpack://mq-navigator3.0client/./src/hooks/useSocket.ts","webpack://mq-navigator3.0client/./src/components/DMList/index.tsx","webpack://mq-navigator3.0client/./src/components/InviteWorkspaceModal/index.tsx","webpack://mq-navigator3.0client/./src/components/Menu/styles.tsx","webpack://mq-navigator3.0client/./src/components/Menu/index.tsx","webpack://mq-navigator3.0client/./src/components/ChatBox/styles.tsx","webpack://mq-navigator3.0client/./src/components/ChatBox/index.tsx","webpack://mq-navigator3.0client/./src/components/Chat/styles.tsx","webpack://mq-navigator3.0client/./src/components/Chat/index.tsx","webpack://mq-navigator3.0client/./src/components/ChatList/styles.tsx","webpack://mq-navigator3.0client/./src/components/ChatList/index.tsx","webpack://mq-navigator3.0client/./src/components/InviteChannelModal/index.tsx","webpack://mq-navigator3.0client/./src/pages/Channel/styles.tsx","webpack://mq-navigator3.0client/./src/utils/makeSection.ts","webpack://mq-navigator3.0client/./src/pages/Channel/index.tsx","webpack://mq-navigator3.0client/./src/pages/DirectMessage/styles.tsx","webpack://mq-navigator3.0client/./src/pages/DirectMessage/index.tsx","webpack://mq-navigator3.0client/./src/layouts/Workspace/styles.tsx","webpack://mq-navigator3.0client/./src/layouts/Workspace/index.tsx","webpack://mq-navigator3.0client/./src/pages/SignUp/styles.tsx","webpack://mq-navigator3.0client/./src/utils/fetcher.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState } from 'react';\n\ntype Handler = (e: any) => void;\ntype ReturnTypes<T = any> = [T, Handler, Dispatch<SetStateAction<T>>];\nconst useInput = <T = any>(initialValue: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialValue);\n  const handler = useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    setValue(e.target.value as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import styled from '@emotion/styled';\n\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n\n  ${({ collapse }) =>\n    collapse &&\n    `\n    & i {\n      transform: none;\n    }\n  `};\n`;\n","import { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { useEffect, VFC } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSWR from 'swr';\n\ninterface Props {\n  channel: IChannel;\n}\nconst EachChannel: VFC<Props> = ({ channel }) => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const date = localStorage.getItem(`${workspace}-${channel.name}`) || 0;\n  const { data: count, mutate } = useSWR<number>(\n    userData ? `/api/workspaces/${workspace}/channels/${channel.name}/unreads?after=${date}` : null,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/workspace/${workspace}/channel/${channel.name}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, workspace, channel]);\n\n  return (\n    <NavLink key={channel.name} activeClassName=\"selected\" to={`/workspace/${workspace}/channel/${channel.name}`}>\n      <span className={count !== undefined && count > 0 ? 'bold' : undefined}># {channel.name}</span>\n      {count !== undefined && count > 0 && <span className=\"count\">{count}</span>}\n    </NavLink>\n  );\n};\n\nexport default EachChannel;\n","import { CollapseButton } from '@components/DMList/styles';\nimport EachChannel from '@components/EachChannel';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\n\ninterface Props {\n  channelData?: IChannel[];\n  userData?: IUser;\n}\n\nconst ChannelList: FC<Props> = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Channels</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          channelData?.map((channel) => {\n            return <EachChannel key={channel.id} channel={channel} />;\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default ChannelList;\n","import styled from '@emotion/styled';\n\nexport const CreateModal = styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import { CreateModal, CloseModalButton } from '@components/Modal/styles';\nimport React, { FC, PropsWithChildren, useCallback } from 'react';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n}\n\nconst Modal: FC<PropsWithChildren<Props>> = ({ show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateModal onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\n        {children}\n      </div>\n    </CreateModal>\n  );\n};\n\nexport default Modal;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowCreateChannelModal: (flag: boolean) => void;\n}\nconst CreateChannelModal: FC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\n  const params = useParams<{ workspace?: string }>();\n  const { workspace } = params;\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\n  const { data: userData } = useSWR<IUser | false>('/api/users', fetcher);\n  const { mutate: revalidateChannel } = useSWR<IChannel[]>(\n    userData ? `/api/workspaces/${workspace}/channels` : null,\n    fetcher,\n  );\n\n  const onCreateChannel = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (!newChannel || !newChannel.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/channels`, {\n          name: newChannel,\n        })\n        .then(() => {\n          revalidateChannel();\n          setShowCreateChannelModal(false);\n          setNewChannel('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newChannel, revalidateChannel, setNewChannel, setShowCreateChannelModal, workspace],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onCreateChannel}>\n        <Label id=\"channel-label\">\n          <span>채널 이름</span>\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\n        </Label>\n        <Button>생성하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CreateChannelModal;\n","import { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { useEffect, VFC } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSWR from 'swr';\n\ninterface Props {\n  member: IUser;\n  isOnline: boolean;\n}\nconst EachDM: VFC<Props> = ({ member, isOnline }) => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const date = localStorage.getItem(`${workspace}-${member.id}`) || 0;\n  const { data: count, mutate } = useSWR<number>(\n    userData ? `/api/workspaces/${workspace}/dms/${member.id}/unreads?after=${date}` : null,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/workspace/${workspace}/dm/${member.id}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, workspace, member]);\n\n  return (\n    <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\n      <i\n        className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\n          isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\n        }`}\n        aria-hidden=\"true\"\n        data-qa=\"presence_indicator\"\n        data-qa-presence-self=\"false\"\n        data-qa-presence-active=\"false\"\n        data-qa-presence-dnd=\"false\"\n      />\n      <span className={count && count > 0 ? 'bold' : undefined}>{member.nickname}</span>\n      {member.id === userData?.id && <span> (나)</span>}\n      {(count && count > 0 && <span className=\"count\">{count}</span>) || null}\n    </NavLink>\n  );\n};\n\nexport default EachDM;\n","import { useCallback } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\nconst backUrl = process.env.NODE_ENV === 'production' ? 'https://sleact.nodebird.com' : 'http://localhost:3095';\n\nconst sockets: { [key: string]: Socket } = {};\nconst useSocket = (workspace?: string): [Socket | undefined, () => void] => {\n  const disconnect = useCallback(() => {\n    if (workspace && sockets[workspace]) {\n      console.log('소켓 연결 끊음');\n      sockets[workspace].disconnect();\n      delete sockets[workspace];\n    }\n  }, [workspace]);\n  if (!workspace) {\n    return [undefined, disconnect];\n  }\n  if (!sockets[workspace]) {\n    sockets[workspace] = io(`${backUrl}/ws-${workspace}`, {\n      transports: ['websocket'],\n    });\n    console.info('create socket', workspace, sockets[workspace]);\n    sockets[workspace].on('connect_error', (err) => {\n      console.error(err);\n      console.log(`connect_error due to ${err.message}`);\n    });\n  }\n\n  return [sockets[workspace], disconnect];\n};\n\nexport default useSocket;\n","import EachDM from '@components/EachDM';\nimport useSocket from '@hooks/useSocket';\nimport { CollapseButton } from '@components/DMList/styles';\nimport { IUser, IUserWithOnline } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\n\nconst DMList = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    console.log('DMList: workspace 바꼈다', workspace);\n    setOnlineList([]);\n  }, [workspace]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    console.log('socket on dm', socket?.hasListeners('dm'), socket);\n    return () => {\n      console.log('socket off dm', socket?.hasListeners('dm'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Direct Messages</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          memberData?.map((member) => {\n            const isOnline = onlineList.includes(member.id);\n            return <EachDM key={member.id} member={member} isOnline={isOnline} />;\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default DMList;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\n}\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { mutate: revalidateMember } = useSWR<IUser[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/members`, {\n          email: newMember,\n        })\n        .then(() => {\n          revalidateMember();\n          setShowInviteWorkspaceModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newMember, workspace, revalidateMember, setShowInviteWorkspaceModal, setNewMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>이메일</span>\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteWorkspaceModal;\n","import styled from '@emotion/styled';\n\nexport const CreateMenu = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import { CreateMenu, CloseModalButton } from '@components/Menu/styles';\nimport React, { CSSProperties, FC, PropsWithChildren, useCallback } from 'react';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  style: CSSProperties;\n  closeButton?: boolean;\n}\n\nconst Menu: FC<PropsWithChildren<Props>> = ({ closeButton = true, style, show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateMenu onClick={onCloseModal}>\n      <div onClick={stopPropagation} style={style}>\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\n        {children}\n      </div>\n    </CreateMenu>\n  );\n};\n// Menu.defaultProps = {\n//   closeButton: true,\n// };\n\nexport default Menu;\n","import styled from '@emotion/styled';\nimport { MentionsInput } from 'react-mentions';\n\nexport const ChatArea = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 20px;\n  padding-top: 0;\n`;\n\nexport const Form = styled.form`\n  color: rgb(29, 28, 29);\n  font-size: 15px;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid rgb(29, 28, 29);\n`;\n\nexport const MentionsTextarea = styled(MentionsInput)`\n  font-family: Slack-Lato, appleLogo, sans-serif;\n  font-size: 15px;\n  padding: 8px 9px;\n\n  & strong {\n    background: skyblue;\n  }\n\n  & textarea {\n    height: 44px;\n    padding: 9px 10px !important;\n    outline: none !important;\n    border-radius: 4px !important;\n    resize: none !important;\n    line-height: 22px;\n    border: none;\n  }\n\n  & ul {\n    border: 1px solid lightgray;\n    max-height: 200px;\n    overflow-y: auto;\n    padding: 9px 10px;\n    background: white;\n    border-radius: 4px;\n    width: 150px;\n  }\n`;\n\nexport const Toolbox = styled.div`\n  position: relative;\n  background: rgb(248, 248, 248);\n  height: 41px;\n  display: flex;\n  border-top: 1px solid rgb(221, 221, 221);\n  align-items: center;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n`;\n\nexport const SendButton = styled.button`\n  position: absolute;\n  right: 5px;\n  top: 5px;\n`;\n\nexport const EachMention = styled.button<{ focus: boolean }>`\n  padding: 4px 20px;\n  background: transparent;\n  border: none;\n  display: flex;\n  align-items: center;\n  color: rgb(28, 29, 28);\n  width: 100%;\n\n  & img {\n    margin-right: 5px;\n  }\n\n  ${({ focus }) =>\n    focus &&\n    `\n    background: #1264a3;\n    color: white;\n  `};\n`;\n","import { ChatArea, Form, MentionsTextarea, SendButton, Toolbox, EachMention } from '@components/ChatBox/styles';\nimport { IUser } from '@typings/db';\nimport autosize from 'autosize';\nimport gravatar from 'gravatar';\nimport React, { FC, useCallback, useEffect, useRef } from 'react';\nimport { Mention, SuggestionDataItem } from 'react-mentions';\n\ninterface Props {\n  onSubmitForm: (e: any) => void;\n  chat?: string;\n  onChangeChat: (e: any) => void;\n  placeholder: string;\n  data?: IUser[];\n}\nconst ChatBox: FC<Props> = ({ onSubmitForm, chat, onChangeChat, placeholder, data }) => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  useEffect(() => {\n    if (textareaRef.current) {\n      autosize(textareaRef.current);\n    }\n  }, []);\n\n  const onKeydownChat = useCallback(\n    (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      if (!e.nativeEvent.isComposing && e.key === 'Enter') {\n        if (!e.shiftKey) {\n          e.preventDefault();\n          onSubmitForm(e);\n        }\n      }\n    },\n    [onSubmitForm],\n  );\n\n  const renderUserSuggestion: (\n    suggestion: SuggestionDataItem,\n    search: string,\n    highlightedDisplay: React.ReactNode,\n    index: number,\n    focused: boolean,\n  ) => React.ReactNode = useCallback(\n    (member, search, highlightedDisplay, index, focus) => {\n      if (!data) {\n        return null;\n      }\n      return (\n        <EachMention focus={focus}>\n          <img src={gravatar.url(data[index].email, { s: '20px', d: 'retro' })} alt={data[index].nickname} />\n          <span>{highlightedDisplay}</span>\n        </EachMention>\n      );\n    },\n    [data],\n  );\n\n  return (\n    <ChatArea>\n      <Form onSubmit={onSubmitForm}>\n        <MentionsTextarea\n          id=\"editor-chat\"\n          value={chat}\n          onChange={onChangeChat}\n          onKeyPress={onKeydownChat}\n          placeholder={placeholder}\n          inputRef={textareaRef}\n          forceSuggestionsAboveCursor\n        >\n          <Mention\n            appendSpaceOnAdd\n            trigger=\"@\"\n            data={data?.map((v) => ({ id: v.id, display: v.nickname })) || []}\n            renderSuggestion={renderUserSuggestion}\n          />\n        </MentionsTextarea>\n        <Toolbox>\n          <SendButton\n            className={\n              'c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_medium c-texty_input__button c-texty_input__button--send' +\n              (chat?.trim() ? '' : ' c-texty_input__button--disabled')\n            }\n            data-qa=\"texty_send_button\"\n            aria-label=\"Send message\"\n            data-sk=\"tooltip_parent\"\n            type=\"submit\"\n            disabled={!chat?.trim()}\n          >\n            <i className=\"c-icon c-icon--paperplane-filled\" aria-hidden=\"true\" />\n          </SendButton>\n        </Toolbox>\n      </Form>\n    </ChatArea>\n  );\n};\n\nexport default ChatBox;\n","import styled from '@emotion/styled';\n\nexport const ChatWrapper = styled.div`\n  display: flex;\n  padding: 8px 20px;\n\n  &:hover {\n    background: #eee;\n  }\n\n  & .chat-img {\n    display: flex;\n    width: 36px;\n    margin-right: 8px;\n\n    & img {\n      width: 36px;\n      height: 36px;\n    }\n  }\n\n  & .chat-text {\n    display: flex;\n    flex-wrap: wrap;\n    flex: 1;\n\n    & p {\n      flex: 0 0 100%;\n      margin: 0;\n    }\n  }\n\n  & .chat-user {\n    display: flex;\n    flex: 0 0 100%;\n    align-items: center;\n\n    & > b {\n      margin-right: 5px;\n    }\n\n    & > span {\n      font-size: 12px;\n    }\n  }\n\n  & a {\n    text-decoration: none;\n    color: deepskyblue;\n  }\n`;\n","import { ChatWrapper } from '@components/Chat/styles';\nimport { IChat, IDM, IUser } from '@typings/db';\nimport dayjs from 'dayjs';\nimport gravatar from 'gravatar';\nimport React, { FC, useMemo, memo } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport regexifyString from 'regexify-string';\n\ninterface Props {\n  data: IDM | IChat;\n}\n\nconst BACK_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:3095' : 'https://sleact.nodebird.com';\nconst Chat: FC<Props> = memo(({ data }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const user: IUser = 'Sender' in data ? data.Sender : data.User;\n\n  const result = useMemo<(string | JSX.Element)[] | JSX.Element>(\n    () =>\n      data.content.startsWith('uploads\\\\') || data.content.startsWith('uploads/') ? (\n        <img src={`${BACK_URL}/${data.content}`} style={{ maxHeight: 200 }} />\n      ) : (\n        regexifyString({\n          pattern: /@\\[(.+?)]\\((\\d+?)\\)|\\n/g,\n          decorator(match, index) {\n            const arr: string[] | null = match.match(/@\\[(.+?)]\\((\\d+?)\\)/)!;\n            if (arr) {\n              return (\n                <Link key={match + index} to={`/workspace/${workspace}/dm/${arr[2]}`}>\n                  @{arr[1]}\n                </Link>\n              );\n            }\n            return <br key={index} />;\n          },\n          input: data.content,\n        })\n      ),\n    [workspace, data.content],\n  );\n\n  return (\n    <ChatWrapper>\n      <div className=\"chat-img\">\n        <img src={gravatar.url(user.email, { s: '36px', d: 'retro' })} alt={user.nickname} />\n      </div>\n      <div className=\"chat-text\">\n        <div className=\"chat-user\">\n          <b>{user.nickname}</b>\n          <span>{dayjs(data.createdAt).format('h:mm A')}</span>\n        </div>\n        <p>{result}</p>\n      </div>\n    </ChatWrapper>\n  );\n});\n\nexport default Chat;\n","import styled from '@emotion/styled';\n\nexport const ChatZone = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n`;\n\nexport const Section = styled.section`\n  margin-top: 20px;\n  border-top: 1px solid #eee;\n`;\n\nexport const StickyHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  width: 100%;\n  position: sticky;\n  top: 14px;\n\n  & button {\n    font-weight: bold;\n    font-size: 13px;\n    height: 28px;\n    line-height: 27px;\n    padding: 0 16px;\n    z-index: 2;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 1px 3px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 24px;\n    position: relative;\n    top: -13px;\n    background: white;\n    border: none;\n    outline: none;\n  }\n`;\n","import Chat from '@components/Chat';\nimport { ChatZone, Section, StickyHeader } from '@components/ChatList/styles';\nimport { IChat, IDM } from '@typings/db';\nimport React, { FC, RefObject, useCallback } from 'react';\nimport { positionValues, Scrollbars } from 'react-custom-scrollbars-2';\n\ninterface Props {\n  scrollbarRef: RefObject<Scrollbars>;\n  isReachingEnd?: boolean;\n  isEmpty: boolean;\n  chatSections: { [key: string]: (IDM | IChat)[] };\n  setSize: (f: (size: number) => number) => Promise<(IDM | IChat)[][] | undefined>;\n}\nconst ChatList: FC<Props> = ({ scrollbarRef, isReachingEnd, isEmpty, chatSections, setSize }) => {\n  const onScroll = useCallback(\n    (values: positionValues) => {\n      if (values.scrollTop === 0 && !isReachingEnd && !isEmpty) {\n        setSize((size) => size + 1).then(() => {\n          scrollbarRef.current?.scrollTop(scrollbarRef.current?.getScrollHeight() - values.scrollHeight);\n        });\n      }\n    },\n    [setSize, scrollbarRef, isReachingEnd, isEmpty],\n  );\n\n  return (\n    <ChatZone>\n      <Scrollbars autoHide ref={scrollbarRef} onScrollFrame={onScroll}>\n        {Object.entries(chatSections).map(([date, chats]) => {\n          return (\n            <Section className={`section-${date}`} key={date}>\n              <StickyHeader>\n                <button>{date}</button>\n              </StickyHeader>\n              {chats.map((chat) => (\n                <Chat key={chat.id} data={chat} />\n              ))}\n            </Section>\n          );\n        })}\n      </Scrollbars>\n    </ChatZone>\n  );\n};\n\nexport default ChatList;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteChannelModal: (flag: boolean) => void;\n}\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { mutate: revalidateMembers } = useSWR<IUser[]>(\n    userData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\n          email: newMember,\n        })\n        .then(() => {\n          revalidateMembers();\n          setShowInviteChannelModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [channel, newMember, revalidateMembers, setNewMember, setShowInviteChannelModal, workspace],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>채널 멤버 초대</span>\n          <Input id=\"member\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteChannelModal;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n`;\n\nexport const DragOver = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 0;\n  width: 100%;\n  height: calc(100% - 64px);\n  background: white;\n  opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n`;\n","import { IChat, IDM } from '@typings/db';\nimport dayjs from 'dayjs';\n\nexport default function makeSection<T extends IDM | IChat>(chatList: T[]) {\n  const sections: { [key: string]: T[] } = {};\n  chatList.forEach((chat) => {\n    const monthDate = dayjs(chat.createdAt).format('YYYY-MM-DD');\n    if (Array.isArray(sections[monthDate])) {\n      sections[monthDate].push(chat);\n    } else {\n      sections[monthDate] = [chat];\n    }\n  });\n  return sections;\n}\n","import ChatBox from '@components/ChatBox';\nimport ChatList from '@components/ChatList';\nimport InviteChannelModal from '@components/InviteChannelModal';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport { Header, Container, DragOver } from '@pages/Channel/styles';\nimport { IChannel, IChat, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport makeSection from '@utils/makeSection';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { useParams } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\n\nconst PAGE_SIZE = 20;\nconst Channel = () => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const [socket] = useSocket(workspace);\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { data: channelsData } = useSWR<IChannel[]>(`/api/workspaces/${workspace}/channels`, fetcher);\n  const channelData = channelsData?.find((v) => v.name === channel);\n  const {\n    data: chatData,\n    mutate: mutateChat,\n    setSize,\n  } = useSWRInfinite<IChat[]>(\n    (index) => `/api/workspaces/${workspace}/channels/${channel}/chats?perPage=${PAGE_SIZE}&page=${index + 1}`,\n    fetcher,\n    {\n      onSuccess(data) {\n        if (data?.length === 1) {\n          setTimeout(() => {\n            scrollbarRef.current?.scrollToBottom();\n          }, 100);\n        }\n      },\n    },\n  );\n  const { data: channelMembersData } = useSWR<IUser[]>(\n    userData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\n    fetcher,\n  );\n  const [chat, onChangeChat, setChat] = useInput('');\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [dragOver, setDragOver] = useState(false);\n\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < PAGE_SIZE);\n\n  const onCloseModal = useCallback(() => {\n    setShowInviteChannelModal(false);\n  }, []);\n\n  const onSubmitForm = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (chat?.trim() && chatData && channelData && userData) {\n        const savedChat = chat;\n        mutateChat((prevChatData) => {\n          prevChatData?.[0].unshift({\n            id: (chatData[0][0]?.id || 0) + 1,\n            content: savedChat,\n            UserId: userData.id,\n            User: userData,\n            createdAt: new Date(),\n            ChannelId: channelData.id,\n            Channel: channelData,\n          });\n          return prevChatData;\n        }, false).then(() => {\n          localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\n          setChat('');\n          if (scrollbarRef.current) {\n            console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n            scrollbarRef.current.scrollToBottom();\n          }\n        });\n        axios\n          .post(`/api/workspaces/${workspace}/channels/${channel}/chats`, {\n            content: savedChat,\n          })\n          .catch(console.error);\n      }\n    },\n    [chat, workspace, channel, channelData, userData, chatData, mutateChat, setChat],\n  );\n\n  const onMessage = useCallback(\n    (data: IChat) => {\n      if (\n        data.Channel.name === channel &&\n        (data.content.startsWith('uploads\\\\') || data.content.startsWith('uploads/') || data.UserId !== userData?.id)\n      ) {\n        mutateChat((chatData) => {\n          chatData?.[0].unshift(data);\n          return chatData;\n        }, false).then(() => {\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 100);\n            } else {\n              toast.success('새 메시지가 도착했습니다.', {\n                onClick() {\n                  scrollbarRef.current?.scrollToBottom();\n                },\n                closeOnClick: true,\n              });\n            }\n          }\n        });\n      }\n    },\n    [channel, userData, mutateChat],\n  );\n\n  useEffect(() => {\n    socket?.on('message', onMessage);\n    return () => {\n      socket?.off('message', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\n  }, [workspace, channel]);\n\n  const onClickInviteChannel = useCallback(() => {\n    setShowInviteChannelModal(true);\n  }, []);\n\n  const onDrop = useCallback(\n    (e: React.DragEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      console.log(e);\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          console.log(e.dataTransfer.items[i]);\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            if (file) {\n              // file이 null이 아닌 경우에만 처리\n              console.log(e, '.... file[' + i + '].name = ' + file.name);\n              formData.append('image', file);\n            }\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          console.log(e, '... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {\n        setDragOver(false);\n        localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\n      });\n    },\n    [workspace, channel],\n  );\n\n  const onDragOver = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    console.log(e);\n    setDragOver(true);\n  }, []);\n\n  if (channelsData && !channelData) {\n    return <Redirect to={`/workspace/${workspace}/channel/일반`} />;\n  }\n\n  const chatSections = makeSection(chatData ? ([] as IChat[]).concat(...chatData).reverse() : []);\n\n  return (\n    <Container onDrop={onDrop} onDragOver={onDragOver}>\n      <Header>\n        <span>#{channel}</span>\n        <div style={{ display: 'flex', flex: 1, justifyContent: 'flex-end', alignItems: 'center' }}>\n          <span>{channelMembersData?.length}</span>\n          <button\n            onClick={onClickInviteChannel}\n            className=\"c-button-unstyled p-ia__view_header__button\"\n            aria-label=\"Add people to #react-native\"\n            data-sk=\"tooltip_parent\"\n            type=\"button\"\n          >\n            <i className=\"c-icon p-ia__view_header__button_icon c-icon--add-user\" aria-hidden=\"true\" />\n          </button>\n        </div>\n      </Header>\n      <ChatList\n        scrollbarRef={scrollbarRef}\n        isReachingEnd={isReachingEnd}\n        isEmpty={isEmpty}\n        chatSections={chatSections}\n        setSize={setSize}\n      />\n      <ChatBox\n        onSubmitForm={onSubmitForm}\n        chat={chat}\n        onChangeChat={onChangeChat}\n        placeholder={`Message #${channel}`}\n        data={channelMembersData}\n      />\n      <InviteChannelModal\n        show={showInviteChannelModal}\n        onCloseModal={onCloseModal}\n        setShowInviteChannelModal={setShowInviteChannelModal}\n      />\n      <ToastContainer position=\"bottom-center\" />\n      {dragOver && <DragOver>업로드!</DragOver>}\n    </Container>\n  );\n};\n\nexport default Channel;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n\n  & img {\n    margin-right: 5px;\n  }\n`;\n","import ChatBox from '@components/ChatBox';\nimport ChatList from '@components/ChatList';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport { DragOver } from '@pages/Channel/styles';\nimport { Header, Container } from '@pages/DirectMessage/styles';\nimport { IDM } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport makeSection from '@utils/makeSection';\nimport axios from 'axios';\nimport gravatar from 'gravatar';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\n\nconst PAGE_SIZE = 20;\nconst DirectMessage = () => {\n  const { workspace, id } = useParams<{ workspace: string; id: string }>();\n  const [socket] = useSocket(workspace);\n  const { data: myData } = useSWR('/api/users', fetcher);\n  const { data: userData } = useSWR(`/api/workspaces/${workspace}/users/${id}`, fetcher);\n  const {\n    data: chatData,\n    mutate: mutateChat,\n    setSize,\n  } = useSWRInfinite<IDM[]>(\n    (index) => `/api/workspaces/${workspace}/dms/${id}/chats?perPage=${PAGE_SIZE}&page=${index + 1}`,\n    fetcher,\n    {\n      onSuccess(data) {\n        if (data?.length === 1) {\n          setTimeout(() => {\n            scrollbarRef.current?.scrollToBottom();\n          }, 100);\n        }\n      },\n    },\n  );\n  const [chat, onChangeChat, setChat] = useInput('');\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [dragOver, setDragOver] = useState(false);\n\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < PAGE_SIZE);\n\n  const onSubmitForm = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (chat?.trim() && chatData) {\n        const savedChat = chat;\n        mutateChat((prevChatData) => {\n          prevChatData?.[0].unshift({\n            id: (chatData[0][0]?.id || 0) + 1,\n            content: savedChat,\n            SenderId: myData.id,\n            Sender: myData,\n            ReceiverId: userData.id,\n            Receiver: userData,\n            createdAt: new Date(),\n          });\n          return prevChatData;\n        }, false).then(() => {\n          localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n          setChat('');\n          if (scrollbarRef.current) {\n            console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n            scrollbarRef.current.scrollToBottom();\n          }\n        });\n        axios\n          .post(`/api/workspaces/${workspace}/dms/${id}/chats`, {\n            content: chat,\n          })\n          .catch(console.error);\n      }\n    },\n    [chat, workspace, id, myData, userData, chatData, mutateChat, setChat],\n  );\n\n  const onMessage = useCallback(\n    (data: IDM) => {\n      if (data.SenderId === Number(id) && myData.id !== Number(id)) {\n        mutateChat((chatData) => {\n          chatData?.[0].unshift(data);\n          return chatData;\n        }, false).then(() => {\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 100);\n            } else {\n              toast.success('새 메시지가 도착했습니다.', {\n                onClick() {\n                  scrollbarRef.current?.scrollToBottom();\n                },\n                closeOnClick: true,\n              });\n            }\n          }\n        });\n      }\n    },\n    [id, myData, mutateChat],\n  );\n\n  useEffect(() => {\n    socket?.on('dm', onMessage);\n    return () => {\n      socket?.off('dm', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n  }, [workspace, id]);\n\n  const onDrop = useCallback(\n    (e: React.DragEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      console.log(e);\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            if (file) {\n              // file이 null이 아닌 경우에만 처리\n              console.log('... file[' + i + '].name = ' + file.name);\n              formData.append('image', file);\n            }\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`/api/workspaces/${workspace}/dms/${id}/images`, formData).then(() => {\n        setDragOver(false);\n        localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n        mutateChat();\n      });\n    },\n    [workspace, id, mutateChat],\n  );\n\n  const onDragOver = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    console.log(e);\n    setDragOver(true);\n  }, []);\n\n  if (!userData || !myData) {\n    return null;\n  }\n\n  const chatSections = makeSection(chatData ? ([] as IDM[]).concat(...chatData).reverse() : []);\n\n  return (\n    <Container onDrop={onDrop} onDragOver={onDragOver}>\n      <Header>\n        <img src={gravatar.url(userData.email, { s: '24px', d: 'retro' })} alt={userData.nickname} />\n        <span>{userData.nickname}</span>\n      </Header>\n      <ChatList\n        scrollbarRef={scrollbarRef}\n        isReachingEnd={isReachingEnd}\n        isEmpty={isEmpty}\n        chatSections={chatSections}\n        setSize={setSize}\n      />\n      <ChatBox\n        onSubmitForm={onSubmitForm}\n        chat={chat}\n        onChangeChat={onChangeChat}\n        placeholder={`Message ${userData.nickname}`}\n        data={[]}\n      />\n      {dragOver && <DragOver>업로드!</DragOver>}\n    </Container>\n  );\n};\n\nexport default DirectMessage;\n","import styled from '@emotion/styled';\n\nexport const RightMenu = styled.div`\n  float: right;\n`;\n\nexport const Header = styled.header`\n  height: 38px;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n`;\n\nexport const ProfileModal = styled.div`\n  display: flex;\n  padding: 20px;\n\n  & img {\n    display: flex;\n  }\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n`;\n\nexport const LogOutButton = styled.button`\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Workspaces = styled.div`\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n`;\n\nexport const Channels = styled.nav`\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n\n    &.selected {\n      color: white;\n    }\n  }\n\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n`;\n\nexport const WorkspaceName = styled.button`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 24px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const MenuScroll = styled.div`\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n`;\n\nexport const WorkspaceModal = styled.div`\n  padding: 10px 0 0;\n\n  & h2 {\n    padding-left: 20px;\n  }\n\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n`;\n\nexport const Chats = styled.div`\n  flex: 1;\n`;\n\nexport const AddButton = styled.button`\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceButton = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n`;\n","import ChannelList from '@components/ChannelList';\nimport CreateChannelModal from '@components/CreateChannelModal';\nimport DMList from '@components/DMList';\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\nimport Menu from '@components/Menu';\nimport Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport Channel from '@pages/Channel';\nimport DirectMessage from '@pages/DirectMessage';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport gravatar from 'gravatar';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useSWR from 'swr';\n\nimport {\n  AddButton,\n  Channels,\n  Chats,\n  Header,\n  LogOutButton,\n  MenuScroll,\n  ProfileImg,\n  ProfileModal,\n  RightMenu,\n  WorkspaceButton,\n  WorkspaceModal,\n  WorkspaceName,\n  Workspaces,\n  WorkspaceWrapper,\n} from './styles';\n\nconst Workspace = () => {\n  const params = useParams<{ workspace?: string }>();\n  // console.log('params', params, 'location', location, 'routeMatch', routeMatch, 'history', history);\n  const { workspace } = params;\n  const [socket, disconnectSocket] = useSocket(workspace);\n  const { data: userData, mutate: revalidateUser } = useSWR<IUser | false>('/api/users', fetcher);\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('');\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\n\n  const onLogOut = useCallback(() => {\n    axios\n      .post('/api/users/logout')\n      .then(() => {\n        revalidateUser();\n      })\n      .catch((error) => {\n        console.dir(error);\n        toast.error(error.response?.data, { position: 'bottom-center' });\n      });\n  }, []);\n\n  const onCreateWorkspace = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (!newWorkspace || !newWorkspace.trim()) {\n        return;\n      }\n      if (!newUrl || !newUrl.trim()) {\n        return;\n      }\n      axios\n        .post('/api/workspaces', {\n          workspace: newWorkspace,\n          url: newUrl,\n        })\n        .then(() => {\n          revalidateUser();\n          setShowCreateWorkspaceModal(false);\n          setNewWorkspace('');\n          setNewUrl('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newWorkspace, newUrl],\n  );\n\n  const onClickCreateWorkspace = useCallback(() => {\n    setShowCreateWorkspaceModal(true);\n  }, []);\n\n  const onClickAddChannel = useCallback(() => {\n    setShowCreateChannelModal(true);\n  }, []);\n\n  const onClickInviteWorkspace = useCallback(() => {\n    setShowInviteWorkspaceModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowCreateWorkspaceModal(false);\n    setShowCreateChannelModal(false);\n    setShowInviteWorkspaceModal(false);\n  }, []);\n\n  const onClickUserProfile = useCallback(() => {\n    setShowUserMenu((prev) => !prev);\n  }, []);\n\n  const toggleWorkspaceModal = useCallback(() => {\n    setShowWorkspaceModal((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      console.info('disconnect socket', workspace);\n      disconnectSocket();\n    };\n  }, [disconnectSocket, workspace]);\n  useEffect(() => {\n    if (channelData && userData) {\n      console.info('로그인하자', socket);\n      socket?.emit('login', { id: userData?.id, channels: channelData.map((v) => v.id) });\n    }\n  }, [socket, userData, channelData]);\n\n  if (userData === false) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <Header>\n        {userData && (\n          <RightMenu>\n            <span onClick={onClickUserProfile}>\n              <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\n            </span>\n            {showUserMenu && (\n              <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onClickUserProfile}>\n                <ProfileModal>\n                  <img src={gravatar.url(userData.email, { s: '36px', d: 'retro' })} alt={userData.nickname} />\n                  <div>\n                    <span id=\"profile-name\">{userData.nickname}</span>\n                    <span id=\"profile-active\">Active</span>\n                  </div>\n                </ProfileModal>\n                <LogOutButton onClick={onLogOut}>로그아웃</LogOutButton>\n              </Menu>\n            )}\n          </RightMenu>\n        )}\n      </Header>\n      <WorkspaceWrapper>\n        <Workspaces>\n          {userData?.Workspaces.map((ws) => {\n            return (\n              <Link key={ws.id} to={`/workspace/${ws.url}/channel/일반`}>\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\n              </Link>\n            );\n          })}\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\n        </Workspaces>\n        <Channels>\n          <WorkspaceName onClick={toggleWorkspaceModal}>\n            {userData?.Workspaces.find((v) => v.url === workspace)?.name}\n          </WorkspaceName>\n          <MenuScroll>\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\n              <WorkspaceModal>\n                <h2>{userData?.Workspaces.find((v) => v.url === workspace)?.name}</h2>\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\n                <button onClick={onClickAddChannel}>채널 만들기</button>\n                <button onClick={onLogOut}>로그아웃</button>\n              </WorkspaceModal>\n            </Menu>\n            <ChannelList />\n            <DMList />\n          </MenuScroll>\n        </Channels>\n        <Chats>\n          <Switch>\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\n          </Switch>\n        </Chats>\n      </WorkspaceWrapper>\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\n        <form onSubmit={onCreateWorkspace}>\n          <Label id=\"workspace-label\">\n            <span>워크스페이스 이름</span>\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\n          </Label>\n          <Label id=\"workspace-url-label\">\n            <span>워크스페이스 url</span>\n            <Input id=\"workspace-url\" value={newUrl} onChange={onChangeNewUrl} />\n          </Label>\n          <Button type=\"submit\">생성하기</Button>\n        </form>\n      </Modal>\n      <CreateChannelModal\n        show={showCreateChannelModal}\n        onCloseModal={onCloseModal}\n        setShowCreateChannelModal={setShowCreateChannelModal}\n      />\n      <InviteWorkspaceModal\n        show={showInviteWorkspaceModal}\n        onCloseModal={onCloseModal}\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\n      />\n      <ToastContainer position=\"bottom-center\" />\n    </div>\n  );\n};\n\nexport default Workspace;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import axios from 'axios';\n\nconst fetcher = (url: string) => axios.get(url, { withCredentials: true }).then((response) => response.data);\n\nexport default fetcher;\n"],"names":["initialValue","_useState2","useState","value","setValue","useCallback","e","target","CollapseButton","styled","button","_templateObject","_ref","collapse","channel","workspace","useParams","location","useLocation","userData","useSWR","fetcher","dedupingInterval","data","date","localStorage","getItem","concat","name","_useSWR2","count","mutate","useEffect","pathname","React","NavLink","key","activeClassName","to","className","undefined","_slicedToArray","channelCollapse","setChannelCollapse","channelData","toggleChannelCollapse","prev","onClick","map","EachChannel","id","CreateModal","div","_taggedTemplateLiteral","CloseModalButton","_templateObject2","show","children","onCloseModal","stopPropagation","setShowCreateChannelModal","_useInput2","useInput","newChannel","onChangeNewChannel","setNewChannel","revalidateChannel","onCreateChannel","preventDefault","trim","axios","post","then","catch","error","_error$response","console","dir","toast","response","position","Modal","onSubmit","Label","Input","onChange","Button","member","isOnline","nickname","sockets","disconnect","log","io","transports","info","on","err","message","memberData","socket","useSocket","_useState4","onlineList","setOnlineList","hasListeners","off","includes","EachDM","setShowInviteWorkspaceModal","newMember","onChangeNewMember","setNewMember","revalidateMember","onInviteMember","email","type","CreateMenu","_ref$closeButton","closeButton","style","ChatArea","Form","form","MentionsTextarea","MentionsInput","_templateObject3","Toolbox","_templateObject4","SendButton","_templateObject5","EachMention","_templateObject6","focus","onSubmitForm","chat","onChangeChat","placeholder","textareaRef","useRef","current","autosize","onKeydownChat","nativeEvent","isComposing","shiftKey","renderUserSuggestion","search","highlightedDisplay","index","src","gravatar","s","d","alt","onKeyPress","inputRef","forceSuggestionsAboveCursor","Mention","appendSpaceOnAdd","trigger","v","display","renderSuggestion","disabled","ChatWrapper","memo","user","Sender","User","result","useMemo","content","startsWith","maxHeight","regexifyString","pattern","decorator","match","arr","Link","input","dayjs","createdAt","format","ChatZone","Section","section","StickyHeader","scrollbarRef","isReachingEnd","isEmpty","chatSections","setSize","onScroll","values","scrollTop","size","_scrollbarRef$current","_scrollbarRef$current2","getScrollHeight","scrollHeight","Scrollbars","autoHide","ref","onScrollFrame","Object","entries","_ref2","_ref3","chats","Chat","setShowInviteChannelModal","_useParams","revalidateMembers","Container","Header","header","DragOver","makeSection","chatList","sections","forEach","monthDate","Array","isArray","push","_chatData$","_chatData","channelsData","find","_useSWRInfinite","useSWRInfinite","onSuccess","length","setTimeout","scrollToBottom","chatData","mutateChat","channelMembersData","setChat","showInviteChannelModal","dragOver","setDragOver","savedChat","prevChatData","_chatData$0$","unshift","UserId","Date","ChannelId","Channel","setItem","getTime","toString","getValues","onMessage","_scrollbarRef$current3","getClientHeight","getScrollTop","_scrollbarRef$current4","success","_scrollbarRef$current5","closeOnClick","onClickInviteChannel","onDrop","formData","FormData","dataTransfer","items","i","kind","file","getAsFile","append","files","onDragOver","Redirect","apply","reverse","flex","justifyContent","alignItems","ChatList","ChatBox","InviteChannelModal","ToastContainer","myData","SenderId","ReceiverId","Receiver","Number","RightMenu","ProfileImg","img","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","_templateObject7","Channels","nav","_templateObject8","WorkspaceName","_templateObject9","MenuScroll","_templateObject10","WorkspaceModal","_templateObject11","Chats","_templateObject12","AddButton","_templateObject13","WorkspaceButton","_templateObject14","_userData$Workspaces$","_userData$Workspaces$2","_useSocket2","disconnectSocket","_useSWR","revalidateUser","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showInviteWorkspaceModal","_useState6","showCreateChannelModal","_useState8","showUserMenu","setShowUserMenu","_useState10","showWorkspaceModal","setShowWorkspaceModal","newWorkspace","onChangeNewWorkspace","setNewWorkspace","_useInput4","newUrl","onChangeNewUrl","setNewUrl","onLogOut","onCreateWorkspace","url","_error$response2","onClickCreateWorkspace","onClickAddChannel","onClickInviteWorkspace","onClickUserProfile","toggleWorkspaceModal","emit","channels","Menu","right","top","ws","slice","toUpperCase","left","ChannelList","DMList","Switch","Route","path","component","DirectMessage","CreateChannelModal","InviteWorkspaceModal","label","Error","Success","LinkContainer","p","get","withCredentials"],"sourceRoot":""}